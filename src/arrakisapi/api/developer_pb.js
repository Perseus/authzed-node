// source: arrakisapi/api/developer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var arrakisapi_api_core_pb = require('../../arrakisapi/api/core_pb.js');
goog.object.extend(proto, arrakisapi_api_core_pb);
var arrakisapi_api_namespace_pb = require('../../arrakisapi/api/namespace_pb.js');
goog.object.extend(proto, arrakisapi_api_namespace_pb);
goog.exportSymbol('proto.LookupShareRequest', null, global);
goog.exportSymbol('proto.LookupShareResponse', null, global);
goog.exportSymbol('proto.LookupShareResponse.LookupStatus', null, global);
goog.exportSymbol('proto.NamespaceContext', null, global);
goog.exportSymbol('proto.RequestContext', null, global);
goog.exportSymbol('proto.ShareRequest', null, global);
goog.exportSymbol('proto.ShareResponse', null, global);
goog.exportSymbol('proto.ValidateRequest', null, global);
goog.exportSymbol('proto.ValidateResponse', null, global);
goog.exportSymbol('proto.ValidateResponse.NamespaceInformation', null, global);
goog.exportSymbol('proto.ValidationError', null, global);
goog.exportSymbol('proto.ValidationError.ErrorKind', null, global);
goog.exportSymbol('proto.ValidationError.Source', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ShareRequest.repeatedFields_, null);
};
goog.inherits(proto.ShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ShareRequest.displayName = 'proto.ShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ShareResponse.displayName = 'proto.ShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LookupShareRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.LookupShareRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LookupShareRequest.displayName = 'proto.LookupShareRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.LookupShareResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.LookupShareResponse.repeatedFields_, null);
};
goog.inherits(proto.LookupShareResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.LookupShareResponse.displayName = 'proto.LookupShareResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.NamespaceContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.NamespaceContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.NamespaceContext.displayName = 'proto.NamespaceContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.RequestContext = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.RequestContext.repeatedFields_, null);
};
goog.inherits(proto.RequestContext, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.RequestContext.displayName = 'proto.RequestContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ValidateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ValidateRequest.displayName = 'proto.ValidateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidationError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ValidationError.repeatedFields_, null);
};
goog.inherits(proto.ValidationError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ValidationError.displayName = 'proto.ValidationError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ValidateResponse.repeatedFields_, null);
};
goog.inherits(proto.ValidateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ValidateResponse.displayName = 'proto.ValidateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ValidateResponse.NamespaceInformation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ValidateResponse.NamespaceInformation.repeatedFields_, null);
};
goog.inherits(proto.ValidateResponse.NamespaceInformation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.ValidateResponse.NamespaceInformation.displayName = 'proto.ValidateResponse.NamespaceInformation';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ShareRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespaceConfigsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    relationTuples: jspb.Message.getFieldWithDefault(msg, 2, ""),
    validationYaml: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ShareRequest}
 */
proto.ShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ShareRequest;
  return proto.ShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ShareRequest}
 */
proto.ShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaceConfigs(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelationTuples(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationYaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespaceConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getRelationTuples();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValidationYaml();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated string namespace_configs = 1;
 * @return {!Array<string>}
 */
proto.ShareRequest.prototype.getNamespaceConfigsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ShareRequest} returns this
 */
proto.ShareRequest.prototype.setNamespaceConfigsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ShareRequest} returns this
 */
proto.ShareRequest.prototype.addNamespaceConfigs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ShareRequest} returns this
 */
proto.ShareRequest.prototype.clearNamespaceConfigsList = function() {
  return this.setNamespaceConfigsList([]);
};


/**
 * optional string relation_tuples = 2;
 * @return {string}
 */
proto.ShareRequest.prototype.getRelationTuples = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.ShareRequest} returns this
 */
proto.ShareRequest.prototype.setRelationTuples = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string validation_yaml = 3;
 * @return {string}
 */
proto.ShareRequest.prototype.getValidationYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ShareRequest} returns this
 */
proto.ShareRequest.prototype.setValidationYaml = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    shareReference: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ShareResponse}
 */
proto.ShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ShareResponse;
  return proto.ShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ShareResponse}
 */
proto.ShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShareReference();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string share_reference = 1;
 * @return {string}
 */
proto.ShareResponse.prototype.getShareReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ShareResponse} returns this
 */
proto.ShareResponse.prototype.setShareReference = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LookupShareRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.LookupShareRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LookupShareRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LookupShareRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    shareReference: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LookupShareRequest}
 */
proto.LookupShareRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LookupShareRequest;
  return proto.LookupShareRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LookupShareRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LookupShareRequest}
 */
proto.LookupShareRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setShareReference(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LookupShareRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LookupShareRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LookupShareRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LookupShareRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getShareReference();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string share_reference = 1;
 * @return {string}
 */
proto.LookupShareRequest.prototype.getShareReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.LookupShareRequest} returns this
 */
proto.LookupShareRequest.prototype.setShareReference = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.LookupShareResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.LookupShareResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.LookupShareResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.LookupShareResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LookupShareResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    namespaceConfigsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    relationTuples: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validationYaml: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.LookupShareResponse}
 */
proto.LookupShareResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.LookupShareResponse;
  return proto.LookupShareResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.LookupShareResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.LookupShareResponse}
 */
proto.LookupShareResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.LookupShareResponse.LookupStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addNamespaceConfigs(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelationTuples(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationYaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.LookupShareResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.LookupShareResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.LookupShareResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.LookupShareResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNamespaceConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRelationTuples();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidationYaml();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.LookupShareResponse.LookupStatus = {
  UNKNOWN_REFERENCE: 0,
  FAILED_TO_LOOKUP: 1,
  VALID_REFERENCE: 2
};

/**
 * optional LookupStatus status = 1;
 * @return {!proto.LookupShareResponse.LookupStatus}
 */
proto.LookupShareResponse.prototype.getStatus = function() {
  return /** @type {!proto.LookupShareResponse.LookupStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.LookupShareResponse.LookupStatus} value
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string namespace_configs = 2;
 * @return {!Array<string>}
 */
proto.LookupShareResponse.prototype.getNamespaceConfigsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.setNamespaceConfigsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.addNamespaceConfigs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.clearNamespaceConfigsList = function() {
  return this.setNamespaceConfigsList([]);
};


/**
 * optional string relation_tuples = 3;
 * @return {string}
 */
proto.LookupShareResponse.prototype.getRelationTuples = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.setRelationTuples = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string validation_yaml = 4;
 * @return {string}
 */
proto.LookupShareResponse.prototype.getValidationYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.LookupShareResponse} returns this
 */
proto.LookupShareResponse.prototype.setValidationYaml = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.NamespaceContext.prototype.toObject = function(opt_includeInstance) {
  return proto.NamespaceContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.NamespaceContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.NamespaceContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    config: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.NamespaceContext}
 */
proto.NamespaceContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.NamespaceContext;
  return proto.NamespaceContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.NamespaceContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.NamespaceContext}
 */
proto.NamespaceContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.NamespaceContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.NamespaceContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.NamespaceContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.NamespaceContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string handle = 1;
 * @return {string}
 */
proto.NamespaceContext.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.NamespaceContext} returns this
 */
proto.NamespaceContext.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string config = 2;
 * @return {string}
 */
proto.NamespaceContext.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.NamespaceContext} returns this
 */
proto.NamespaceContext.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.RequestContext.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.RequestContext.prototype.toObject = function(opt_includeInstance) {
  return proto.RequestContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.RequestContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RequestContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespacesList: jspb.Message.toObjectList(msg.getNamespacesList(),
    proto.NamespaceContext.toObject, includeInstance),
    tuplesList: jspb.Message.toObjectList(msg.getTuplesList(),
    arrakisapi_api_core_pb.RelationTuple.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.RequestContext}
 */
proto.RequestContext.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.RequestContext;
  return proto.RequestContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.RequestContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.RequestContext}
 */
proto.RequestContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.NamespaceContext;
      reader.readMessage(value,proto.NamespaceContext.deserializeBinaryFromReader);
      msg.addNamespaces(value);
      break;
    case 2:
      var value = new arrakisapi_api_core_pb.RelationTuple;
      reader.readMessage(value,arrakisapi_api_core_pb.RelationTuple.deserializeBinaryFromReader);
      msg.addTuples(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.RequestContext.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.RequestContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.RequestContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.RequestContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.NamespaceContext.serializeBinaryToWriter
    );
  }
  f = message.getTuplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      arrakisapi_api_core_pb.RelationTuple.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NamespaceContext namespaces = 1;
 * @return {!Array<!proto.NamespaceContext>}
 */
proto.RequestContext.prototype.getNamespacesList = function() {
  return /** @type{!Array<!proto.NamespaceContext>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.NamespaceContext, 1));
};


/**
 * @param {!Array<!proto.NamespaceContext>} value
 * @return {!proto.RequestContext} returns this
*/
proto.RequestContext.prototype.setNamespacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.NamespaceContext=} opt_value
 * @param {number=} opt_index
 * @return {!proto.NamespaceContext}
 */
proto.RequestContext.prototype.addNamespaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.NamespaceContext, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RequestContext} returns this
 */
proto.RequestContext.prototype.clearNamespacesList = function() {
  return this.setNamespacesList([]);
};


/**
 * repeated RelationTuple tuples = 2;
 * @return {!Array<!proto.RelationTuple>}
 */
proto.RequestContext.prototype.getTuplesList = function() {
  return /** @type{!Array<!proto.RelationTuple>} */ (
    jspb.Message.getRepeatedWrapperField(this, arrakisapi_api_core_pb.RelationTuple, 2));
};


/**
 * @param {!Array<!proto.RelationTuple>} value
 * @return {!proto.RequestContext} returns this
*/
proto.RequestContext.prototype.setTuplesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.RelationTuple=} opt_value
 * @param {number=} opt_index
 * @return {!proto.RelationTuple}
 */
proto.RequestContext.prototype.addTuples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.RelationTuple, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.RequestContext} returns this
 */
proto.RequestContext.prototype.clearTuplesList = function() {
  return this.setTuplesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && proto.RequestContext.toObject(includeInstance, f),
    validationYaml: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidateRequest}
 */
proto.ValidateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidateRequest;
  return proto.ValidateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidateRequest}
 */
proto.ValidateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.RequestContext;
      reader.readMessage(value,proto.RequestContext.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidationYaml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.RequestContext.serializeBinaryToWriter
    );
  }
  f = message.getValidationYaml();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional RequestContext context = 1;
 * @return {?proto.RequestContext}
 */
proto.ValidateRequest.prototype.getContext = function() {
  return /** @type{?proto.RequestContext} */ (
    jspb.Message.getWrapperField(this, proto.RequestContext, 1));
};


/**
 * @param {?proto.RequestContext|undefined} value
 * @return {!proto.ValidateRequest} returns this
*/
proto.ValidateRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ValidateRequest} returns this
 */
proto.ValidateRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ValidateRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string validation_yaml = 3;
 * @return {string}
 */
proto.ValidateRequest.prototype.getValidationYaml = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.ValidateRequest} returns this
 */
proto.ValidateRequest.prototype.setValidationYaml = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ValidationError.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidationError.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidationError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidationError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidationError.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    line: jspb.Message.getFieldWithDefault(msg, 2, 0),
    column: jspb.Message.getFieldWithDefault(msg, 3, 0),
    source: jspb.Message.getFieldWithDefault(msg, 4, 0),
    kind: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pathList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    metadata: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidationError}
 */
proto.ValidationError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidationError;
  return proto.ValidationError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidationError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidationError}
 */
proto.ValidationError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLine(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColumn(value);
      break;
    case 4:
      var value = /** @type {!proto.ValidationError.Source} */ (reader.readEnum());
      msg.setSource(value);
      break;
    case 5:
      var value = /** @type {!proto.ValidationError.ErrorKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addPath(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidationError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidationError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidationError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidationError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLine();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getColumn();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.ValidationError.Source = {
  UNKNOWN_SOURCE: 0,
  NAMESPACE_CONFIG: 1,
  VALIDATION_TUPLE: 2,
  VALIDATION_YAML: 3
};

/**
 * @enum {number}
 */
proto.ValidationError.ErrorKind = {
  UNKNOWN_KIND: 0,
  PARSE_ERROR: 1,
  NAMESPACE_CONFIG_ISSUE: 2,
  DUPLICATE_TUPLE: 3,
  MISSING_EXPECTED_TUPLE: 4,
  EXTRA_TUPLE_FOUND: 5,
  UNKNOWN_NAMESPACE: 6,
  UNKNOWN_RELATION: 7,
  MAXIMUM_RECURSION: 8
};

/**
 * optional string message = 1;
 * @return {string}
 */
proto.ValidationError.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 line = 2;
 * @return {number}
 */
proto.ValidationError.prototype.getLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setLine = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 column = 3;
 * @return {number}
 */
proto.ValidationError.prototype.getColumn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setColumn = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Source source = 4;
 * @return {!proto.ValidationError.Source}
 */
proto.ValidationError.prototype.getSource = function() {
  return /** @type {!proto.ValidationError.Source} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.ValidationError.Source} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ErrorKind kind = 5;
 * @return {!proto.ValidationError.ErrorKind}
 */
proto.ValidationError.prototype.getKind = function() {
  return /** @type {!proto.ValidationError.ErrorKind} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.ValidationError.ErrorKind} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated string path = 6;
 * @return {!Array<string>}
 */
proto.ValidationError.prototype.getPathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setPathList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.addPath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.clearPathList = function() {
  return this.setPathList([]);
};


/**
 * optional string metadata = 7;
 * @return {string}
 */
proto.ValidationError.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.ValidationError} returns this
 */
proto.ValidationError.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ValidateResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contextNamespacesList: jspb.Message.toObjectList(msg.getContextNamespacesList(),
    proto.ValidateResponse.NamespaceInformation.toObject, includeInstance),
    validationErrorsList: jspb.Message.toObjectList(msg.getValidationErrorsList(),
    proto.ValidationError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidateResponse}
 */
proto.ValidateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidateResponse;
  return proto.ValidateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidateResponse}
 */
proto.ValidateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.ValidateResponse.NamespaceInformation;
      reader.readMessage(value,proto.ValidateResponse.NamespaceInformation.deserializeBinaryFromReader);
      msg.addContextNamespaces(value);
      break;
    case 2:
      var value = new proto.ValidationError;
      reader.readMessage(value,proto.ValidationError.deserializeBinaryFromReader);
      msg.addValidationErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContextNamespacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.ValidateResponse.NamespaceInformation.serializeBinaryToWriter
    );
  }
  f = message.getValidationErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.ValidationError.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ValidateResponse.NamespaceInformation.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ValidateResponse.NamespaceInformation.prototype.toObject = function(opt_includeInstance) {
  return proto.ValidateResponse.NamespaceInformation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ValidateResponse.NamespaceInformation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateResponse.NamespaceInformation.toObject = function(includeInstance, msg) {
  var f, obj = {
    handle: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parsed: (f = msg.getParsed()) && arrakisapi_api_namespace_pb.NamespaceDefinition.toObject(includeInstance, f),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.ValidationError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ValidateResponse.NamespaceInformation}
 */
proto.ValidateResponse.NamespaceInformation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ValidateResponse.NamespaceInformation;
  return proto.ValidateResponse.NamespaceInformation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ValidateResponse.NamespaceInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ValidateResponse.NamespaceInformation}
 */
proto.ValidateResponse.NamespaceInformation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHandle(value);
      break;
    case 2:
      var value = new arrakisapi_api_namespace_pb.NamespaceDefinition;
      reader.readMessage(value,arrakisapi_api_namespace_pb.NamespaceDefinition.deserializeBinaryFromReader);
      msg.setParsed(value);
      break;
    case 3:
      var value = new proto.ValidationError;
      reader.readMessage(value,proto.ValidationError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ValidateResponse.NamespaceInformation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ValidateResponse.NamespaceInformation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ValidateResponse.NamespaceInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ValidateResponse.NamespaceInformation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHandle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParsed();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      arrakisapi_api_namespace_pb.NamespaceDefinition.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.ValidationError.serializeBinaryToWriter
    );
  }
};


/**
 * optional string handle = 1;
 * @return {string}
 */
proto.ValidateResponse.NamespaceInformation.prototype.getHandle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.ValidateResponse.NamespaceInformation} returns this
 */
proto.ValidateResponse.NamespaceInformation.prototype.setHandle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional NamespaceDefinition parsed = 2;
 * @return {?proto.NamespaceDefinition}
 */
proto.ValidateResponse.NamespaceInformation.prototype.getParsed = function() {
  return /** @type{?proto.NamespaceDefinition} */ (
    jspb.Message.getWrapperField(this, arrakisapi_api_namespace_pb.NamespaceDefinition, 2));
};


/**
 * @param {?proto.NamespaceDefinition|undefined} value
 * @return {!proto.ValidateResponse.NamespaceInformation} returns this
*/
proto.ValidateResponse.NamespaceInformation.prototype.setParsed = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.ValidateResponse.NamespaceInformation} returns this
 */
proto.ValidateResponse.NamespaceInformation.prototype.clearParsed = function() {
  return this.setParsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.ValidateResponse.NamespaceInformation.prototype.hasParsed = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated ValidationError errors = 3;
 * @return {!Array<!proto.ValidationError>}
 */
proto.ValidateResponse.NamespaceInformation.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ValidationError, 3));
};


/**
 * @param {!Array<!proto.ValidationError>} value
 * @return {!proto.ValidateResponse.NamespaceInformation} returns this
*/
proto.ValidateResponse.NamespaceInformation.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValidationError}
 */
proto.ValidateResponse.NamespaceInformation.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ValidateResponse.NamespaceInformation} returns this
 */
proto.ValidateResponse.NamespaceInformation.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * repeated NamespaceInformation context_namespaces = 1;
 * @return {!Array<!proto.ValidateResponse.NamespaceInformation>}
 */
proto.ValidateResponse.prototype.getContextNamespacesList = function() {
  return /** @type{!Array<!proto.ValidateResponse.NamespaceInformation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ValidateResponse.NamespaceInformation, 1));
};


/**
 * @param {!Array<!proto.ValidateResponse.NamespaceInformation>} value
 * @return {!proto.ValidateResponse} returns this
*/
proto.ValidateResponse.prototype.setContextNamespacesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.ValidateResponse.NamespaceInformation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValidateResponse.NamespaceInformation}
 */
proto.ValidateResponse.prototype.addContextNamespaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.ValidateResponse.NamespaceInformation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ValidateResponse} returns this
 */
proto.ValidateResponse.prototype.clearContextNamespacesList = function() {
  return this.setContextNamespacesList([]);
};


/**
 * repeated ValidationError validation_errors = 2;
 * @return {!Array<!proto.ValidationError>}
 */
proto.ValidateResponse.prototype.getValidationErrorsList = function() {
  return /** @type{!Array<!proto.ValidationError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.ValidationError, 2));
};


/**
 * @param {!Array<!proto.ValidationError>} value
 * @return {!proto.ValidateResponse} returns this
*/
proto.ValidateResponse.prototype.setValidationErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.ValidationError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ValidationError}
 */
proto.ValidateResponse.prototype.addValidationErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.ValidationError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.ValidateResponse} returns this
 */
proto.ValidateResponse.prototype.clearValidationErrorsList = function() {
  return this.setValidationErrorsList([]);
};


goog.object.extend(exports, proto);
