// @generated by protobuf-ts 2.0.7 with parameter generate_dependencies,long_type_string,client_grpc1
// @generated from protobuf file "authzed/api/v0/developer.proto" (package "authzed.api.v0", syntax proto3)
// tslint:disable
import { DeveloperService } from "./developer";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { FormatSchemaResponse } from "./developer";
import type { FormatSchemaRequest } from "./developer";
import type { UpgradeSchemaResponse } from "./developer";
import type { UpgradeSchemaRequest } from "./developer";
import type { LookupShareResponse } from "./developer";
import type { LookupShareRequest } from "./developer";
import type { ShareResponse } from "./developer";
import type { ShareRequest } from "./developer";
import type { ValidateResponse } from "./developer";
import type { ValidateRequest } from "./developer";
import type { EditCheckResponse } from "./developer";
import type { EditCheckRequest } from "./developer";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service authzed.api.v0.DeveloperService
 */
export interface IDeveloperServiceClient {
    /**
     * @generated from protobuf rpc: EditCheck(authzed.api.v0.EditCheckRequest) returns (authzed.api.v0.EditCheckResponse);
     */
    editCheck(input: EditCheckRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: EditCheckResponse) => void): grpc.ClientUnaryCall;
    editCheck(input: EditCheckRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: EditCheckResponse) => void): grpc.ClientUnaryCall;
    editCheck(input: EditCheckRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: EditCheckResponse) => void): grpc.ClientUnaryCall;
    editCheck(input: EditCheckRequest, callback: (err: grpc.ServiceError | null, value?: EditCheckResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Validate(authzed.api.v0.ValidateRequest) returns (authzed.api.v0.ValidateResponse);
     */
    validate(input: ValidateRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ValidateResponse) => void): grpc.ClientUnaryCall;
    validate(input: ValidateRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ValidateResponse) => void): grpc.ClientUnaryCall;
    validate(input: ValidateRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ValidateResponse) => void): grpc.ClientUnaryCall;
    validate(input: ValidateRequest, callback: (err: grpc.ServiceError | null, value?: ValidateResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: Share(authzed.api.v0.ShareRequest) returns (authzed.api.v0.ShareResponse);
     */
    share(input: ShareRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ShareResponse) => void): grpc.ClientUnaryCall;
    share(input: ShareRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: ShareResponse) => void): grpc.ClientUnaryCall;
    share(input: ShareRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: ShareResponse) => void): grpc.ClientUnaryCall;
    share(input: ShareRequest, callback: (err: grpc.ServiceError | null, value?: ShareResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: LookupShared(authzed.api.v0.LookupShareRequest) returns (authzed.api.v0.LookupShareResponse);
     */
    lookupShared(input: LookupShareRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: LookupShareResponse) => void): grpc.ClientUnaryCall;
    lookupShared(input: LookupShareRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: LookupShareResponse) => void): grpc.ClientUnaryCall;
    lookupShared(input: LookupShareRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: LookupShareResponse) => void): grpc.ClientUnaryCall;
    lookupShared(input: LookupShareRequest, callback: (err: grpc.ServiceError | null, value?: LookupShareResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: UpgradeSchema(authzed.api.v0.UpgradeSchemaRequest) returns (authzed.api.v0.UpgradeSchemaResponse);
     */
    upgradeSchema(input: UpgradeSchemaRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void): grpc.ClientUnaryCall;
    upgradeSchema(input: UpgradeSchemaRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void): grpc.ClientUnaryCall;
    upgradeSchema(input: UpgradeSchemaRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void): grpc.ClientUnaryCall;
    upgradeSchema(input: UpgradeSchemaRequest, callback: (err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: FormatSchema(authzed.api.v0.FormatSchemaRequest) returns (authzed.api.v0.FormatSchemaResponse);
     */
    formatSchema(input: FormatSchemaRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void): grpc.ClientUnaryCall;
    formatSchema(input: FormatSchemaRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void): grpc.ClientUnaryCall;
    formatSchema(input: FormatSchemaRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void): grpc.ClientUnaryCall;
    formatSchema(input: FormatSchemaRequest, callback: (err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void): grpc.ClientUnaryCall;
}
/**
 * @generated from protobuf service authzed.api.v0.DeveloperService
 */
export class DeveloperServiceClient extends grpc.Client implements IDeveloperServiceClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: EditCheck(authzed.api.v0.EditCheckRequest) returns (authzed.api.v0.EditCheckResponse);
     */
    editCheck(input: EditCheckRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: EditCheckResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: EditCheckResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: EditCheckResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[0];
        return this.makeUnaryRequest<EditCheckRequest, EditCheckResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: EditCheckRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): EditCheckResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Validate(authzed.api.v0.ValidateRequest) returns (authzed.api.v0.ValidateResponse);
     */
    validate(input: ValidateRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ValidateResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ValidateResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ValidateResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[1];
        return this.makeUnaryRequest<ValidateRequest, ValidateResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: ValidateRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ValidateResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: Share(authzed.api.v0.ShareRequest) returns (authzed.api.v0.ShareResponse);
     */
    share(input: ShareRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ShareResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: ShareResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: ShareResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[2];
        return this.makeUnaryRequest<ShareRequest, ShareResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: ShareRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): ShareResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: LookupShared(authzed.api.v0.LookupShareRequest) returns (authzed.api.v0.LookupShareResponse);
     */
    lookupShared(input: LookupShareRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: LookupShareResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: LookupShareResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: LookupShareResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[3];
        return this.makeUnaryRequest<LookupShareRequest, LookupShareResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: LookupShareRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): LookupShareResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: UpgradeSchema(authzed.api.v0.UpgradeSchemaRequest) returns (authzed.api.v0.UpgradeSchemaResponse);
     */
    upgradeSchema(input: UpgradeSchemaRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: UpgradeSchemaResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[4];
        return this.makeUnaryRequest<UpgradeSchemaRequest, UpgradeSchemaResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: UpgradeSchemaRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): UpgradeSchemaResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: FormatSchema(authzed.api.v0.FormatSchemaRequest) returns (authzed.api.v0.FormatSchemaResponse);
     */
    formatSchema(input: FormatSchemaRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: FormatSchemaResponse) => void)): grpc.ClientUnaryCall {
        const method = DeveloperService.methods[5];
        return this.makeUnaryRequest<FormatSchemaRequest, FormatSchemaResponse>(`/${DeveloperService.typeName}/${method.name}`, (value: FormatSchemaRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): FormatSchemaResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
}
